{
    "gui.extension.music.name": "Musique",
    "gui.extension.music.description": "Jouer des instruments et du tambour.",
    "gui.extension.pen.name": "Stylo",
    "gui.extension.pen.description": "Dessiner avec vos sprites.",
    "gui.extension.HTTPIO.name": "HTTPIO",
    "gui.extension.HTTPIO.description": "Ressentez le charme de l'Internet !",
    "gui.extension.ccjson.name": "JSON",
    "gui.extension.ccjson.description": "Extension JSON utile.",
    "gui.extension.redlist.name": "Libra",
    "gui.extension.redlist.description": "Plugin de liste rouge Libra",
    "gui.extension.videosensing.name": "Détection vidéo",
    "gui.extension.videosensing.description": "Capter du mouvement avec la caméra.",
    "gui.extension.text2speech.name": "Synthèse vocale",
    "gui.extension.text2speech.description": "Fais parler tes projets.",
    "gui.extension.translate.name": "Traduire",
    "gui.extension.translate.description": "Traduire du texte dans différentes langues.",
    "gui.extension.makeymakey.description": "Transforme n'importe quoi en touche.",
    "gui.extension.microbit.description": "Connecter vos projets avec le monde.",
    "gui.extension.microbit.connectingMessage": "Connexion",
    "gui.extension.ev3.description": "Construire des robots interactifs et plus.",
    "gui.extension.ev3.connectingMessage": "Connexion. Vérifiez que le pin sur votre EV3 est mis sur 1234.",
    "gui.extension.boost.description": "Donner vie à des créations robotiques.",
    "gui.extension.boost.connectingMessage": "Connexion",
    "gui.extension.wedo2.description": "Construire avec des moteurs et des capteurs.",
    "gui.extension.wedo2.connectingMessage": "Connexion",
    "gui.extension.gdxfor.description": "Sentir quand on pousse, tire, bouge et tourne.",
    "gui.extension.gdxfor.connectingMessage": "Connexion",
    "boost.color.any": "de n'importe quelle couleur",
    "boost.color.black": "noire",
    "boost.color.blue": "bleue",
    "boost.color.green": "verte",
    "boost.color.red": "rouge",
    "boost.color.white": "blanche",
    "boost.color.yellow": "jaune",
    "boost.getMotorPosition": "position du moteur [MOTOR_REPORTER_ID]",
    "boost.getTiltAngle": "angle d'inclinaison [TILT_DIRECTION]",
    "boost.motorDirection.backward": "par là",
    "boost.motorDirection.forward": "par ici",
    "boost.motorDirection.reverse": "inversée",
    "boost.motorOff": "éteindre le moteur [MOTOR_ID]",
    "boost.motorOn": "allumer le moteur [MOTOR_ID]",
    "boost.motorOnFor": "faire tourner le moteur [MOTOR_ID] pendant [DURATION] secondes",
    "boost.motorOnForRotation": "faire tourner le moteur [MOTOR_ID] de [ROTATION] rotations",
    "boost.seeingColor": "brique [COLOR] vue ?",
    "boost.setLightHue": "mettre la couleur de la lampe à [HUE]",
    "boost.setMotorDirection": "mettre la direction du moteur [MOTOR_ID] à [MOTOR_DIRECTION]",
    "boost.setMotorPower": "mettre la vitesse du moteur [MOTOR_ID] à [POWER] %",
    "boost.tiltDirection.any": "n'importe laquelle",
    "boost.tiltDirection.down": "vers le bas",
    "boost.tiltDirection.left": "à gauche",
    "boost.tiltDirection.right": "à droite",
    "boost.tiltDirection.up": "vers le haut",
    "boost.whenColor": "quand une brique [COLOR] est vue",
    "boost.whenTilted": "quand incliné [TILT_DIRECTION_ANY]",
    "ccjson.getValueByKey": "obtenir [KEY] in [JSON]",
    "ccjson.setValueByKey": "mettre [KEY] à [VALEUR] dans [JSON]",
    "ev3.beepNote": "jouer la note [NOTE] pendant [TIME] secondes",
    "ev3.buttonPressed": "bouton [PORT] appuyé ?",
    "ev3.getBrightness": "luminosité",
    "ev3.getDistance": "distance",
    "ev3.getMotorPosition": "position du moteur [PORT]",
    "ev3.motorSetPower": "mettre la puissance du moteur [PORT] à [POWER] %",
    "ev3.motorTurnClockwise": "faire tourner le moteur [PORT] dans ce sens-ci pendant [TIME] secondes",
    "ev3.motorTurnCounterClockwise": "faire tourner le moteur [PORT] dans ce sens-là pendant [TIME] secondes",
    "ev3.whenBrightnessLessThan": "quand la luminosité < [DISTANCE]",
    "ev3.whenButtonPressed": "quand le bouton [PORT] est appuyé",
    "ev3.whenDistanceLessThan": "quand la distance < [DISTANCE]",
    "gdxfor.getAcceleration": "accélération [DIRECTION]",
    "gdxfor.getForce": "force",
    "gdxfor.getSpin": "vitesse de rotation [DIRECTION]",
    "gdxfor.getTilt": "angle d'inclinaison [TILT]",
    "gdxfor.isFreeFalling": "tombe ?",
    "gdxfor.isTilted": "incliné [TILT] ?",
    "gdxfor.pulled": "tiré",
    "gdxfor.pushed": "poussé",
    "gdxfor.shaken": "secoué",
    "gdxfor.startedFalling": "commençant à tomber",
    "gdxfor.tiltDirectionMenu.any": "n'importe laquelle",
    "gdxfor.tiltDirectionMenu.back": "en arrière",
    "gdxfor.tiltDirectionMenu.front": "en avant",
    "gdxfor.tiltDirectionMenu.left": "à gauche",
    "gdxfor.tiltDirectionMenu.right": "à droite",
    "gdxfor.turnedFaceDown": "tourné vers le bas",
    "gdxfor.turnedFaceUp": "tourné vers le haut",
    "gdxfor.whenForcePushedOrPulled": "quand le capteur de force est [PUSH_PULL]",
    "gdxfor.whenGesture": "quand [GESTURE]",
    "gdxfor.whenTilted": "quand incliné [TILT]",
    "httpio.categoryName": "HttpIO",
    "httpio.httpGet": "obtenir [URL]",
    "httpio.httpPost": "poster [URL] avec le JSON [JSON]",
    "httpio.setHeader": "mettre l'en-tête à [HEADER]",
    "httpio.setUA": "mettre l'UA à [UA]",
    "libra.categoryName": "Libra",
    "libra.inListReason": "raison de [NAME] pour être dans la liste rouge",
    "libra.isInList": "[NAME] est-il dans la liste rouge ?",
    "libra.isRedlistAvailable": "La liste rouge est-elle disponible ?",
    "makeymakey.downArrow": "flèche bas",
    "makeymakey.downArrowShort": "bas",
    "makeymakey.leftArrow": "flèche gauche",
    "makeymakey.leftArrowShort": "gauche",
    "makeymakey.rightArrow": "flèche droite",
    "makeymakey.rightArrowShort": "droite",
    "makeymakey.spaceKey": "espace",
    "makeymakey.upArrow": "flèche haut",
    "makeymakey.upArrowShort": "haut",
    "makeymakey.whenKeyPressed": "quand la touche [KEY] pressée",
    "makeymakey.whenKeysPressedInOrder": "quand [SEQUENCE] sont pressés dans l'ordre",
    "microbit.buttonsMenu.any": "n'importe lequel",
    "microbit.clearDisplay": "effacer l'écran",
    "microbit.defaultTextToDisplay": "Bonjour !",
    "microbit.displaySymbol": "afficher [MATRIX]",
    "microbit.displayText": "afficher le texte [TEXT]",
    "microbit.gesturesMenu.jumped": "sauté",
    "microbit.gesturesMenu.moved": "bougé",
    "microbit.gesturesMenu.shaken": "secoué",
    "microbit.isButtonPressed": "bouton [BTN] appuyé ?",
    "microbit.isTilted": "incliné [DIRECTION] ?",
    "microbit.pinStateMenu.off": "désactivée",
    "microbit.pinStateMenu.on": "activée",
    "microbit.tiltAngle": "angle d'inclinaison [DIRECTION]",
    "microbit.tiltDirectionMenu.any": "dans n'importe quelle direction",
    "microbit.tiltDirectionMenu.back": "en arrière",
    "microbit.tiltDirectionMenu.front": "en avant",
    "microbit.tiltDirectionMenu.left": "à gauche",
    "microbit.tiltDirectionMenu.right": "à droite",
    "microbit.whenButtonPressed": "quand le bouton [BTN] est appuyé",
    "microbit.whenGesture": "quand [GESTURE]",
    "microbit.whenPinConnected": "quand la broche [PIN] est connectée",
    "microbit.whenTilted": "quand incliné [DIRECTION]",
    "music.categoryName": "Musique",
    "music.changeTempo": "ajouter [TEMPO] au tempo",
    "music.drumBass": "(2) Grosse caisse",
    "music.drumBongo": "(13) Bongo",
    "music.drumCabasa": "(15) Cabasa",
    "music.drumClaves": "(9) Claves",
    "music.drumClosedHiHat": "(6) Charleston fermé",
    "music.drumConga": "(14) Conga",
    "music.drumCowbell": "(11) Sonnaille",
    "music.drumCrashCymbal": "(4) Cymbale crash",
    "music.drumCuica": "(18) Cuíca",
    "music.drumGuiro": "(16) Guiro",
    "music.drumHandClap": "(8) Claquement de main",
    "music.drumOpenHiHat": "(5) Charleston ouvert",
    "music.drumSideStick": "(3) Side Stick",
    "music.drumSnare": "(1) Caisse claire",
    "music.drumTambourine": "(7) Tambourin",
    "music.drumTriangle": "(12) Triangle",
    "music.drumVibraslap": "(17) Vibraslap",
    "music.drumWoodBlock": "(10) Wood-block",
    "music.getTempo": "tempo",
    "music.instrumentBass": "(6) Basse",
    "music.instrumentBassoon": "(14) Basson",
    "music.instrumentCello": "(8) Violoncelle",
    "music.instrumentChoir": "(15) Chorale",
    "music.instrumentClarinet": "(10) Clarinette",
    "music.instrumentElectricGuitar": "(5) Guitare électrique",
    "music.instrumentElectricPiano": "(2) Piano électrique",
    "music.instrumentFlute": "(12) Flûte",
    "music.instrumentGuitar": "(4) Guitare",
    "music.instrumentMarimba": "(19) Marimba",
    "music.instrumentMusicBox": "(17) Boîte à musique",
    "music.instrumentOrgan": "(3) Orgue",
    "music.instrumentPiano": "(1) Piano",
    "music.instrumentPizzicato": "(7) Pizzicato",
    "music.instrumentSaxophone": "(11) Saxophone",
    "music.instrumentSteelDrum": "(18) Steel Drum",
    "music.instrumentSynthLead": "(20) Lead synthétisé",
    "music.instrumentSynthPad": "(21) Pad synthétisé",
    "music.instrumentTrombone": "(9) Trombone",
    "music.instrumentVibraphone": "(16) Vibraphone",
    "music.instrumentWoodenFlute": "(13) Flûte en bois",
    "music.midiPlayDrumForBeats": "jouer du tambour [DRUM] pendant [BEATS] temps",
    "music.midiSetInstrument": "choisir l'instrument n° [INSTRUMENT]",
    "music.playDrumForBeats": "jouer du tambour [DRUM] pendant [BEATS] temps",
    "music.playNoteForBeats": "jouer la note [NOTE] pendant [BEATS] temps",
    "music.restForBeats": "faire une pause pendant [BEATS] temps",
    "music.setInstrument": "choisir l'instrument n° [INSTRUMENT]",
    "music.setTempo": "mettre le tempo à [TEMPO]",
    "pen.categoryName": "Stylo",
    "pen.changeColorParam": "ajouter [VALUE] à la [COLOR_PARAM] du stylo",
    "pen.changeHue": "ajouter [HUE] à la couleur du stylo",
    "pen.changeShade": "ajouter [SHADE] à l'intensité du stylo",
    "pen.changeSize": "ajouter [SIZE] à la taille du stylo",
    "pen.clear": "effacer tout",
    "pen.colorMenu.brightness": "luminosité",
    "pen.colorMenu.color": "couleur",
    "pen.colorMenu.saturation": "saturation",
    "pen.colorMenu.transparency": "transparence",
    "pen.penDown": "stylo en position d'écriture",
    "pen.penUp": "relever le stylo",
    "pen.setColor": "mettre la couleur du stylo à [COLOR]",
    "pen.setColorParam": "mettre la [COLOR_PARAM] du stylo à [VALUE]",
    "pen.setHue": "mettre la couleur du stylo à [HUE]",
    "pen.setShade": "mettre l'intensité du stylo à [SHADE]",
    "pen.setSize": "mettre la taille du stylo à [SIZE]",
    "pen.stamp": "estampiller",
    "speech.defaultWhenIHearValue": "allons-y",
    "speech.extensionName": "Synthèse vocale",
    "speech.listenAndWait": "écouter et attendre",
    "speech.speechReporter": "parole",
    "speech.whenIHear": "quand j'entends [PHRASE]",
    "text2speech.alto": "alto",
    "text2speech.categoryName": "Synthèse vocale",
    "text2speech.defaultTextToSpeak": "bonjour",
    "text2speech.giant": "géant",
    "text2speech.kitten": "chaton",
    "text2speech.setLanguageBlock": "mettre la langue à [LANGUAGE]",
    "text2speech.setVoiceBlock": "choisir la voix du [VOICE]",
    "text2speech.speakAndWaitBlock": "prononcer [WORDS]",
    "text2speech.squeak": "piailler",
    "text2speech.tenor": "ténor",
    "translate.categoryName": "Traduire",
    "translate.defaultTextToTranslate": "bonjour",
    "translate.translateBlock": "traduire [WORDS] en [LANGUAGE]",
    "translate.viewerLanguage": "langue",
    "videoSensing.categoryName": "Détection vidéo",
    "videoSensing.direction": "direction",
    "videoSensing.motion": "mouvement",
    "videoSensing.off": "désactiver",
    "videoSensing.on": "activer",
    "videoSensing.onFlipped": "inverser",
    "videoSensing.setVideoTransparency": "mettre la transparence de la vidéo à [TRANSPARENCY]",
    "videoSensing.sprite": "sprite",
    "videoSensing.stage": "scène",
    "videoSensing.videoOn": "[ATTRIBUTE] de la vidéo de [SUBJECT]",
    "videoSensing.videoToggle": "[VIDEO_STATE] la vidéo",
    "videoSensing.whenMotionGreaterThan": "quand le mouvement de la vidéo > [REFERENCE]",
    "wedo2.getDistance": "distance",
    "wedo2.getTiltAngle": "angle d'inclinaison [TILT_DIRECTION]",
    "wedo2.isTilted": "incliné [TILT_DIRECTION_ANY] ?",
    "wedo2.motorDirection.backward": "par là",
    "wedo2.motorDirection.forward": "par ici",
    "wedo2.motorDirection.reverse": "inversé",
    "wedo2.motorId.a": "moteur A",
    "wedo2.motorId.all": "tous les moteurs",
    "wedo2.motorId.b": "moteur B",
    "wedo2.motorId.default": "moteur",
    "wedo2.motorOff": "éteindre le moteur [MOTOR_ID]",
    "wedo2.motorOn": "allumer le moteur [MOTOR_ID]",
    "wedo2.motorOnFor": "allumer le moteur [MOTOR_ID] pendant [DURATION] secondes",
    "wedo2.playNoteFor": "jouer la note [NOTE] pendant [DURATION] secondes",
    "wedo2.setLightHue": "mettre la couleur de la lampe à [HUE]",
    "wedo2.setMotorDirection": "mettre la direction du moteur [MOTOR_ID] à [MOTOR_DIRECTION]",
    "wedo2.startMotorPower": "mettre la puissance du moteur [MOTOR_ID] à [POWER]",
    "wedo2.tiltDirection.any": "dans n'importe quelle direction",
    "wedo2.tiltDirection.down": "vers le bas",
    "wedo2.tiltDirection.left": "à gauche",
    "wedo2.tiltDirection.right": "à droite",
    "wedo2.tiltDirection.up": "vers le haut",
    "wedo2.whenDistance": "quand la distance [OP] [REFERENCE]",
    "wedo2.whenTilted": "quand incliné [TILT_DIRECTION_ANY]",
    "ccjson.getValueByArray": "obtenir la valeur ([POS] de [ARRAY])",
    "clipblocks.booleanMenu.false": "faux",
    "clipblocks.booleanMenu.true": "vrai",
    "clipblocks.clearFlashGraphicEffect": "clear all flash effect",
    "clipblocks.colorInPosition": "couleur à x : [X] y : [Y]",
    "clipblocks.createvar": "créer une variable [NAME]",
    "clipblocks.deletevar": "supprimer une variable [NAME]",
    "clipblocks.getClipboard": "contenu du presse-papiers",
    "clipblocks.gotoWebsite": "visiter le site web : [URL]",
    "clipblocks.graphicMenu.bevel": "bevel",
    "clipblocks.graphicMenu.blur": "flou",
    "clipblocks.graphicMenu.glow": "brillance",
    "clipblocks.graphicMenu.shadow": "ombre",
    "clipblocks.isVariableExist": "est-ce que [NAME] existe ?",
    "clipblocks.playSoundFromInternet": "jouer le son depuis l'URL : [URL]",
    "clipblocks.setClipboard": "mettre le contenu du presse-papiers à [TEXT]",
    "clipblocks.setFlashGraphicEffect": "set [FLASHEFFECT] flash effect to [VALUE1] [VALUE2] [VALUE3]",
    "clipblocks.setRate": "mettre l'évaluation à [RATE]",
    "clipblocks.setStageSize": "mettre la taille de la scène à [WIDTH] x [HEIGHT]",
    "clipblocks.setVisibility": "mettre la visibilité de tous les sprites à [BOOLEANMENU]",
    "clipblocks.showDialog": "afficher une boîte de dialogue : [TITLE] contenu : [CONTENT] disposition à gauche : [BOOLEANMENU] texte du bouton : [BUTTON TEXT] ",
    "clipblocks.stopSoundFromInternet": "stopper les sons des URL",
    "clipblocks.valueOfVariable": "valeur de [NAME]",
    "pen.booleanMenu.false": "faux",
    "pen.booleanMenu.true": "vrai",
    "pen.drawRect": "utiliser [COLOR] pour dessiner un carré à x : [X] y : [Y] largeur : [WIDTH] hauteur : [HEIGHT]",
    "pen.printText": "écrire [TEXT] à x : [X] y : [Y]",
    "pen.setPrintFont": "mettre la police d'écriture à [FONT]",
    "pen.setPrintFontBold": "mettre le gras de la police à [BOOLEANMENU]",
    "pen.setPrintFontColor": "mettre la couleur de la police à [COLOR]",
    "pen.setPrintFontItalic": "mettre l'italique de la police à [BOOLEANMENU]",
    "pen.setPrintFontSize": "mettre la taille de la police à [SIZE]",
    "pen.setPrintFontUnderline": "mettre le soulignement de la police à [BOOLEANMENU]",
    "gui.extension.clipcc.json.name": "JSON",
    "gui.extension.clipcc.json.description": "Extension JSON utile.",
    "ccjson.getLengthOfArray": "longueur de [ARRAY]",
    "ccjson.setValueByPos": "set [POS] in array [ARRAY] to [VALUE]",
    "pen.GoPenLayer": "aller à l'[OPTION] plan",
    "pen.layerMenu.back": "arrière",
    "pen.layerMenu.front": "avant"
}